using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace База
{
    public class User
    {
        public string Name { get; set; }
        public int Id { get; set; }
        public bool IsActive { get; set; }

        public User(string name, int id, bool isActive)
        {
            Name = name;
            Id = id;
            IsActive = isActive;
        }

        public void Activate()
        {
            IsActive = true;
        }

        public void Deactivate()
        {
            IsActive = false;
        }
    }

    public class UserDatabase
    {
        private List<User> users = new List<User>();
        public void AddUser(User user)
        {
            users.Add(user);
        }

        public void ActivateUser(int userID)
        {
            User user = users.Find(u => u.Id == userID);
            if (user != null)
            {
                user.Activate();
                Console.WriteLine("пользователь активирован.");
            }
            else
            {
                Console.WriteLine("пользователь с таким id не найден");
            }
        }

        public void DeactivateUser(int userID)
        {
            User user = users.Find(u => u.Id == userID);
            if (user != null)
            {
                user.Deactivate();
                Console.WriteLine("Пользователь деактивирован");
            }
            else
            {
                Console.WriteLine("пользователь с таким id не найден");
            }
        }
        public void DisplayUser()
        {
            foreach (User user in users)
            {
                Console.WriteLine($"имя: {user.Name}, Id: {user.Id}, статус активности: {user.IsActive}");
            }
        }
    }
    class program
    {
        static void Main()
        {
            UserDatabase userDb = new UserDatabase();

            while (true)
            {
                Console.WriteLine("выберите действие :\n1. добавить нового пользователя\n2. активировать пользователя /n3. ");
                string choice = Console.ReadLine();

                switch (choice)
                {
                    case "1":
                        Console.WriteLine("введите имя пользователя:");
                        string name = Console.ReadLine();

                        Console.WriteLine("введите Id пользователя");
                        int id = Int32.Parse(Console.ReadLine());

                        Console.WriteLine("введите логический статус пользователя (true/false)");
                        bool isActive = Boolean.Parse(Console.ReadLine());

                        User newUser = new User(name, id, isActive);
                        userDb.AddUser(newUser);

                        Console.WriteLine("пользователь добавлен");
                        break;
                    case "2":
                        Console.WriteLine("введите Id пользователя для активации:");
                        int activatedId = Int32.Parse(Console.ReadLine());
                        userDb.ActivateUser(activatedId);
                        break;
                    case "3":
                        Console.WriteLine("введите Id пользователя для деактивации");
                        int deactivateId = Int32.Parse(Console.ReadLine());
                        userDb.DeactivateUser(deactivateId);
                        break;
                    case "4":
                        userDb.DisplayUser();
                        break;
                    case "5":
                        Environment.Exit(0);
                        break;
                    default:
                        Console.WriteLine("неверный выбор. попробуйте снова.");
                        break;
                }
            }

        }
    }
}


категорич запрещ исп материалл кроме заготовленных программм написанных до этого, офиц документации(microsoft) тех док
нужно применять стандартизацию кода(правило написание именб нельзя одной буквой называть, название переменных олитцетворяют свое назначениебб при применении методов называть глаголом с большой буквы, никаких магических значений
при при мененнии метода свич между кейс и брейк должна быть только одна строчка кода 

задание 1: динамический массив (если пользователь вводит число, то оно добавляется в массив. если вводит удалить то программа просит указать id удаляемого объекта,
 если выход - конец работы программы ) условия:
при решении запрещается использовать какие либо структуры( списки, очереди, словари) кроме массивов. Самм массив на начало программы должен иметь длину 0. (классы можно не создавать) 
задание 2: конвертер валют. программа должна уметь покупать и продавать любые валюты за любую стоимость. разрешается использовать любые 3 валюты 
задание 3: вызод из лабиринта с использованием ключей клавиш условия: запрещается выходить за предел карты; управляемый бот реагирует на стены
задание 4: определение максимальной длины подмассива разрешается использовать заготовленный массив  подмассив -0 повторе
