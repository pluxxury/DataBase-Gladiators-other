using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace ConsoleApp12
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Managment managment = new Managment();

            managment.Start();
        }
    }

    class Student
    {
        public Student(string name, string group, int age)
        {
            Name = name;
            Group = group;
            Age = age;
        }

        public string Name { get; private set; }
        public string Surname { get; private set; }
        public string Group { get; private set; }
        public int Age { get; private set; }

        public override string ToString()
        {
            return $"Имя: {Name}, Группа: {Group}, Возраст: {Age}";
        }
    }

    class Managment
    {
        private List<Student> students = new List<Student>();
        private const string FileName = "students.txt";

        public void Start()
        {
            LoadStudents();

            bool isOpen = true;

            const string CommandAddStudent = "1";
            const string CommandDeleteStudent = "2";
            const string CommandShowStudents = "3";
            const string CommandExit = "4";

            while (isOpen)
            {
                Console.WriteLine("Выберите действие");
                Console.WriteLine($"{CommandAddStudent}. Добавить студента");
                Console.WriteLine($"{CommandDeleteStudent}. Удалить студента");
                Console.WriteLine($"{CommandShowStudents}. Показать всех студентов");
                Console.WriteLine($"{CommandExit}. Выйти");

                string choice = Console.ReadLine();

                switch (choice)
                {
                    case CommandAddStudent:
                        AddStudent();
                        SaveStudents();
                        break;
                    case CommandDeleteStudent:
                        DeleteStudentByIndex();
                        SaveStudents();
                        Console.WriteLine();
                        break;

                    case CommandShowStudents:
                        ShowStudents();
                        Console.WriteLine();
                        break;

                    case CommandExit:
                        isOpen = false;
                        break;

                    default:
                        Console.WriteLine("Неправильный выбор.");
                        Console.WriteLine();
                        break;
                }
            }
        }

        private void AddStudent()
        {
            string name;
            string group;
            int age;

            Console.WriteLine("Введите ФИО");
            name = Console.ReadLine();

            Console.WriteLine("Введите группу");
            group = Console.ReadLine();

            Console.WriteLine("Введите возраст");
            while (!int.TryParse(Console.ReadLine(), out age))
            {
                Console.WriteLine("Ошибка: введено не число. Попробуйте еще раз.");
            }

            Console.WriteLine();

            Student studentAdd = new Student(name, group, age);
            students.Add(studentAdd);
        }

        private void DeleteStudentByIndex()
        {
            if (students.Count == 0)
            {
                Console.WriteLine("В группе пока никого нет");
                return;
            }

            Console.WriteLine("Список Студентов:");
            for (int i = 0; i < students.Count; i++)
            {
                Console.WriteLine($"{i + 1}. {students[i]}");
            }

            int index;
            Console.Write("Введите номер студента, которого хотите удалить: ");
            while (!int.TryParse(Console.ReadLine(), out index) || index < 1 || index > students.Count)
            {
                Console.Write("Неправильный номер. Введите номер от 1 до " + students.Count + ": ");
            }

            Student studentRemove = students[index - 1];
            students.RemoveAt(index - 1);

            Console.WriteLine($"Студент {studentRemove.Name} был удалён из группы");
        }

        public void ShowStudents()
        {
            if (students.Count == 0)
            {
                Console.WriteLine("В группе пока никого нет");
            }
            else
            {
                Console.WriteLine("Список Студентов:");
                for (int i = 0; i < students.Count; i++)
                {
                    Console.WriteLine($"{i + 1}. {students[i]}");
                }
            }
        }

        private void LoadStudents()
        {
            if (File.Exists(FileName))
            {
                try
                {
                    string[] lines = File.ReadAllLines(FileName);

                    foreach (string line in lines)
                    {
                        string[] parts = line.Split(',');
                        if (parts.Length == 3)
                        {
                            string name = parts[0].Trim();
                            string group = parts[1].Trim();
                            if (int.TryParse(parts[2].Trim(), out int age))
                            {
                                students.Add(new Student(name, group, age));
                            }
                            else
                            {
                                Console.WriteLine($"Ошибка при чтении файла: неверный формат строки '{line}'");
                            }
                        }
                        else
                        {
                            Console.WriteLine($"Ошибка при чтении файла: неверный формат строки '{line}'");
                        }
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Ошибка при чтении файла: {ex.Message}");
                }
            }
        }

        private void SaveStudents()
        {
            try
            {
                string[] lines = students.Select(s => $"{s.Name},{s.Group},{s.Age}").ToArray();

                File.WriteAllLines(FileName, lines);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при сохранении файла: {ex.Message}");
            }
        }
    }
}
